@startuml Class_meghatarozas
'Classok a programon bel√ºl

abstract class User {
    -fullName : string
    -dateOfBirth : string
    -address : string
    -password : string
    -codeOfUser : string
	-typeOfUser : int
	#User()
	#User(fullName, dateOfBirth, address, password, codeOfUser, typeOfUser)
	+getCodeOfUser() : string
    +getFullName() : string
    +getDateOfBirth() : string
    +getAddress() : string
	+getPassword() : string
    +setFullName(newFullName) : void
    +setDateOfBirth(newDateOfBirth) : void
    +setAddress(newAddress) : void
    +setPassword(newPassword) : void
	+setCodeOfUser(newCodeOfUser) : void
	+checkType() : int
	+setType(typeOf) : void
}

class Buyer {
    -orderCode : string
	-myBasket : list<int>
	#Buyer()
    +getOderCode() : string
    +addToBasket(ProductId) : void
    +removeFromBasket(ProductId) :void
    +listMyBasket() : void
}  

class Product {
    -name : string
    -sector : int
    -shelf : int
    -row : int
    -id : int
    #Product(name,sector,shelf,row,id)
    +getName() : string
    +getSector() : int
    +getShelf() : int
    +getRow() : int 
    +getId() : int
}


class ListOfProducts {
    -type : string
	-products : list<string>
	#ListOfProducts(_type)
    +listProducts() : void
    +listProducts(Type) : void
}

class Delivery {
    - deliveryAddress : string
    - deliveryCode : string
	#Delivery()
    +addDelivery() : void
	+setDeliveryAddress(newAddress) : void
    +generateDeliveryCode : string
    +getDeliveryAddress() : string
    +getDeliveryCode() : string
}

class CodeGenerator {
	-alphaNums : char
	-code : string
	+generateCode(lenght) : string
}

class Database {
	-usersArray : list<User>
	-productArray : list<Product>
	#Database()
	+addUser(newFullName,newDateOfBirth,newAddress,newPassword,newType) : void
	+deleteUser(codeToBeDeleted) : void
	+listAll() : void
	+listWorkers() : void
	+listBuyers() : void
	+placeOfProduct() : void
	+addProduct(name,sector,shelf,row,newId) : void
	+deleteProduct(id) : void
	+login(username,password,currentUser) : void
	+logout() : void
}

class Main {
	+readUsers(&B) : void
	+readProducts(&B) : void
	-db : Database
	-chosenChar : char
	-defaultUser : User
	-currentUser : User
}


' Kapcsolodasok a classok kozott

User <|-- Buyer

Database -- Buyer
Database -- Product
Database -- ListOfProducts

Product o-- ListOfProducts


Buyer -- ListOfProducts
Buyer -- Delivery

@enduml

